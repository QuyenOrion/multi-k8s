apiVersion: v1
kind: ServiceAccount
metadata:
  name: admin-user
  namespace: kubernetes-dashboard
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: admin-user
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: cluster-admin
subjects:
  - kind: ServiceAccount
    name: admin-user
    namespace: kubernetes-dashboard
#kubectl -n kubernetes-dashboard create token admin-user => Get Admin Token
#kubectl config use-context docker-desktop => Switch to Docker Desktop Context
#kubectl config get-contexts => Get Contexts
#kubectl config set-context docker-desktop --namespace=kubernetes-dashboard => Set Context to Docker Desktop
#kubectl proxy => Start Proxy
#kubectl apply -f admin.yml => Apply Admin Role and Service Account
#http://localhost:8001/api/v1/namespaces/kubernetes-dashboard/services/https:kubernetes-dashboard:/proxy/ => Access Dashboard
#kubectl create secret generic pgpassword --from-literal PGPASSWORD=12345678asdf => Create Secret
